{{#*inline "page"}}

<h1 class="doc-heading">Modding Manual</h1>

<h2 class="doc-heading">Camera</h2>

<p>Press esc to toggle between orthographic and perspective camera.
Press Backspace to return control of the camera to the game.</p>

<h3 class="doc-heading">Orthographic Camera</h3>
<p>Middle click to pan the camera.
Scroll to zoom the camera.
Press Backspace to return control of the camera to the game.
</p>

<h3 class="doc-heading">Perspective Camera</h3>
<p>wasd to pan and zoom the camera.
Middle click and drag to change the angle of the camera.
Press Backspace to return control of the camera to the game.
</p>

<h2 class="doc-heading">Editor</h2>

<p>Always backup any changes you are working on.
Due to the nature of the interface it is super easy to accidentally destroy work without realising.</p>
<p>To work through some examples check out the <a href="tutorial">editor-tutorial</a>.</p>
<p>The pause screen is where all the editing action occurs.
<span class="warning">Make sure you are on the pause screen to make use of the following tools.</span></p>

<h3 class="doc-heading">Game Flow</h3>

<p>Use the following keys to alter the flow of the game</p>
<ul>
    <li>Spacebar - step game</li>
    <li>H        - Rewind</li>
    <li>J        - Step rewind</li>
    <li>K        - Step replay</li>
    <li>L        - Replay</li>
</ul>

<h3 class="doc-heading">Editor Selector</h3>

<p>Before editing anything you must first select what you wish to edit:</p>

<ul>
    <li>0 - Stage</li>
    <li>1 - 1st entity</li>
    <li>2 - 2nd entity</li>
    <li>3 - 3rd entity</li>
    <li>4 - 4th entity</li>
</ul>

<h3 class="doc-heading">Element Selection</h3>

<p>Sometimes you need to make ANOTHER selection with your mouse.
In different editor modes you can select different elements to modify them.</p>

<ul>
    <li>Left click           - Select one element</li>
    <li>Right click and drag - Select multiple elements</li>
</ul>

<h4 class="doc-heading">Modifiers</h4>

<ul>
    <li>Default   - Delete the previous selection</li>
    <li>Shift key - Add to the previous selection</li>
    <li>Alt key   - Remove from previous selection</li>
</ul>

<h3 class="doc-heading">Debug Displays</h3>

<p>While in the relevant editor mode (keys 0-9) you can toggle various debug displays.
Textual debug output is also written to stdout every time a frame is changed or modified.
Use F1-F12 to toggle them.</p>

<h2 class="doc-heading">Entity Editor (1-9)</h2>

<h3 class="doc-heading">Debug Displays</h3>

<ul>
    <li>F1 - Player physics</li>
    <li>F2 - Input</li>
    <li>F2 + Shift - Input difference</li>
    <li>F3 - Current action</li>
    <li>F4 - Timers and Counters</li>
    <li>F5 - Control stick (white) + C Stick vector (yellow)</li>
    <li>F6 - pre DI vector (red) + post DI vector (green)</li>
    <li>F7 - hitbox BKB vector (white) + hitbox KBG (blue)</li>
    <li>F8 - Display ECB and BPS</li>
    <li>F9 - Change between rendering modes: Model, Model+colboxes, colboxes, nothing</li>
    <li>F10 - Display player camera area</li>
    <li>F11 - Enable all debug displays</li>
    <li>F12 - Disable all debug displays</li>
</ul>

<h3 class="doc-heading">Frame editing</h3>

<ul>
    <li>V - Copy frame</li>
    <li>B - Paste frame</li>
    <li>N - Delete frame</li>
    <li>M - Insert frame, copies from previous frame</li>
</ul>

<h3 class="doc-heading">Collision Box editing</h3>

<p>Most of these operations will apply to all selected colboxes:</p>

<ul>
    <li>A - Move colboxes, left click to confirm</li>
    <li>D - Delete selected colboxes</li>
    <li>F - Insert hurtbox</li>
    <li>[ - Shrink selected colboxes</li>
    <li>] - Grow selected colboxes</li>
    <li>Q - Set selected hitbox angles to point to the cursor</li>
</ul>

<h2 class="doc-heading">Stage Editor (0)</h2>

<h3 class="doc-heading">Debug Displays</h3>

<ul>
    <li>F1 - Display blast zone boundary</li>
    <li>F2 - Display camera boundary</li>
    <li>F3 - Display/edit spawn points</li>
    <li>F4 - Display/edit respawn points</li>
    <li>F11 - Enable all debug displays</li>
    <li>F12 - Disable all debug displays</li>
</ul>

<h3 class="doc-heading">Element Editing</h3>

<p>The following operations apply to all selected platforms and re/spawn points</p>

<ul>
    <li>A - Move element</li>
    <li>S - Connect/disconnect surfaces</li>
    <li>D - Delete element</li>
    <li>F - Place platform surface</li>
    <li>R - Place stage surface</li>
    <li>E - Place ceiling surface</li>
    <li>W - Place wall surface</li>
    <li>Q - Place decorative surface</li>
    <li>Z - Place spawn point</li>
    <li>X - Place respawn point</li>
</ul>

<h2 class="doc-heading">Command line</h2>

<p>Press '~' to open the command line in Canon Collision.
Alternatively you can use the cc_cli binary to send commands via your OS's terminal to Canon Collision.
Note that when using cc_cli you will need to escape characters that have special meaning to your shell. e.g. quotes</p>

<p>The Canon Collision command line is very powerful, at the price of complexity.
We recommend you work through the Command Line section of the <a href="tutorial">Editor Tutorial</a> if you have not yet worked with the Canon Collision command line tool.
You can then come back here if you ever need a reference.</p>

<h3 class="doc-heading">Breakdown</h3>

<p>Lets give a quick breakdown of an example command.
This command sets the weight of foo_entity to 1.2:</p>

<p><code>package.entities[foo_entity.cbor].weight:set 1.2</code></p>

<ul>
    <li>package           - property</li>
    <li>entities          - property</li>
    <li>[foo_entity.cbor] - key</li>
    <li>weight            - property</li>
    <li>set               - command</li>
    <li>1.2               - value</li>
</ul>

<p>A command consists of:</p>

<ol>
    <li>properties, indexes and keys to select an object.</li>
    <li>A command to do something to the selected object.</li>
    <li>Some commands require extra values to tell it what to do.</li>
</ol>

<h3 class="doc-heading">Actions</h3>

<p>Different objects support different commands:</p>

<p>All objects support the following commands:</p>

<ul>
    <li>help <value> - view an objects type, its attributes and its commands</li>
    <li>set <value>  - change an attribute to the specified size</li>
    <li>get <depth>  - display an attribute, the depth argument is optional and specifies how deeply nested object attributes should be shown.</li>
    <li>copy         - copy the specified attribute</li>
    <li>paste        - paste the copied attribute to the specified attribute (Must be the same type)</li>
</ul>

<!--
<p>Properties that are assigned some point in space can use the following (TODO)
*   rotate <degrees> - rotate the object, around some central point, the specified number of degrees</p>

### Object structure

Objects contain other objects creating a large tree:

[TODO: Replace with a nice diagram that doesn't look terrible and is hopefully autogenerated]
*   Players
*   Debug
*   Packages
    +   Fighters
        -   <fighter name>
            *   action_defs
                +   <action index>
                    -   ActionFrame
                        *   colboxes
                            +   <colbox index>
                                -   CollisionBoxRole
                        *   colbox_links
                            +   <link index>
                        *   effects
    +   Stages
    +   Rules
-->

<h3 class="doc-heading">Getter</h3>

<p>Get object properties with dot notation. </p>

<p><code>object.property</code></p>

<h3 class="doc-heading">Indexing</h3>

<p>Sometimes an objects properties require an index or key to access them.</p>

<ul>
    <li><code>property["key_string"]</code> select by key</li>
    <li><code>property[0]</code>            select by index</li>
    <li><code>property[?]</code>            select based on <a href="#context-section">context</a></li>
    <li><code>property[*]</code>            select all</li>
</ul>

<!--
<p>TODO: Planned fancy index accessors</p>

<ul>
    <li><code>property[0, 3]</code> select 0 and 3 (TODO)</li>
    <li><code>property[1-5]</code>  select 0 and between 1 and 5 inclusive (TODO)</li>
    <li><code>property[?+1]</code>  one more then context (TODO)</li>
</ul>
-->

<h3 class="doc-heading" id="context-section">Context</h3>

<p>There are many contexts available that allow you to quickly access the object you want to modify.
Setting a colbox to radius 10 can be done the primitive way.
Objects are chained together with '.' and indexed by [] like this:</p>

<p><code>package.entities["fighter.cbor"].actions[0].frames[0].colboxes[2].radius:set 10</code></p>

<p>However how are you supposed to know all of these indexes? o.0
Instead you can let Canon Collision use context to know what you want to modify.
Select the hitboxes you want in game then run:</p>

<p><code>cc package.entities[?].actions[?].frames[?].colboxes[?].radius:set 10</code></p>

{{/inline}}
{{~> base title="Canon Collision | Manual" page_manual=true ~}}
